/* eslint-env node, qunit */
import { readFileSync } from 'fs'
import loader from '@ractivejs/loader-webpack'

QUnit.module('loader-webpack')

const specs = [
  'cjs'
]

specs.forEach(spec => {
  QUnit.test(spec, assert => {
    let actualCode, actualMap

    const source = readFileSync(`test/samples/${spec}/component.ractive.html`, { encoding: 'utf8' })
    const expectedCode = readFileSync(`test/samples/${spec}/component.js`, { encoding: 'utf8' })
    const expectedMap = JSON.parse(readFileSync(`test/samples/${spec}/component.js.map`, { encoding: 'utf8' }))

    const resourcePath = `component.ractive.html`
    const callback = (e, code, map) => { actualCode = code; actualMap = map }

    loader.call({ resourcePath, callback }, source)

    assert.strictEqual(actualCode, expectedCode)
    assert.deepEqual(actualMap, expectedMap)
  })
})
