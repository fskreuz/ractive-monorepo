/* eslint-env browser, qunit */
import { translate } from '@ractivejs/loader-system'

QUnit.module('loader-system')

const specs = [
  'cjs'
]

specs.forEach(spec => {
  QUnit.test(spec, assert => {
    const source = fetch(`/base/test/samples/${spec}/component.ractive.html`).then(r => r.text())
    const expectedCode = fetch(`/base/test/samples/${spec}/component.js`).then(r => r.text())
    const expectedMap = fetch(`/base/test/samples/${spec}/component.js.map`).then(r => r.json())

    return Promise.all([source, expectedCode, expectedMap]).then(([source, expectedCode, expectedMap]) => {
      const load = {name: `component.ractive.html`, source, metadata: {}}
      const code = translate(load)

      assert.strictEqual(code, expectedCode)
      assert.deepEqual(load.metadata.sourceMap, expectedMap)
    })
  })
})
